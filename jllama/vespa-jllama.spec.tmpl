# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.

# Disable build id note requirement for now
%undefine _missing_build_ids_terminate_build

# Force special prefix for Vespa
%define _prefix /opt/vespa-deps

%global debug_package %{nil}

# Don't provide shared library or pkgconfig
%global __provides_exclude ^(lib.*\\.so[0-9.]*\\(\\)\\(64bit\\)|(cmake|pkgconfig)\\(.*)$

%global __requires_exclude ^lib(jllama|llama|ggml)\.so[0-9.]*\\([A-Z._0-9]*\\)\\(64bit\\)$

# Version
%define ver_major _TMPL_VER_MAJOR
%define ver_minor _TMPL_VER_MINOR
%define ver_patch _TMPL_VER_PATCH
%define ver_release _TMPL_VER_RELEASE

%if 0%{?fedora}
%if %{fedora} > 39
%global _vespa_java_version 21
%endif
%endif
%if 0%{?el10}
%global _vespa_java_version 21
%endif
%if ! 0%{?_vespa_java_version:1}
%global _vespa_java_version 17
%endif

Summary:        Native part of Java Bindings for llama.cpp
Name:           vespa-jllama
Version:        %{ver_major}.%{ver_minor}.%{ver_patch}
Release:        %{ver_release}%{?dist}
License:        MIT
URL:            https://github.com/kherud/
Source0:        https://github.com/kherud/java-llama.cpp/archive/refs/tags/v%{version}.tar.gz

%if 0%{?amzn2023}
BuildRequires: java-17-amazon-corretto-devel
BuildRequires: java-17-amazon-corretto
BuildRequires: maven-amazon-corretto17
BuildRequires: vespa-ccache
%else
%if 0%{?el8} || 0%{?el9} || 0%{?el10} || 0%{?fedora}
BuildRequires: java-%{_vespa_java_version}-openjdk-devel
%endif
%if 0%{?el8}
BuildRequires: maven >= 1:3.8.0
%else
BuildRequires: maven
%endif
%endif

%if 0%{?el8} || 0%{?el9} || 0%{?amzn2023}
BuildRequires: vespa-ccache
%else
BuildRequires: ccache
%endif

%if 0%{?el8} || 0%{?el9}
BuildRequires: vespa-toolset-14-meta
BuildRequires: gcc-toolset-14-gcc-c++
%global _devtoolset_enable /opt/rh/gcc-toolset-14/enable
BuildRequires: vespa-cmake
%global _enable_cuda 1
%else
BuildRequires: cmake
%endif

%if 0%{?el10} || 0%{?fedora}
BuildRequires: gcc-c++
%endif

BuildRequires: make
BuildRequires: git

%if 0%{?_enable_cuda}
%global _cuda_version_major 12
%global _cuda_version_minor 8
%global _cuda_version_micro 90
%global _cuda_version_pkg_name %{_cuda_version_major}-%{_cuda_version_minor}
%global _cuda_version_norm_num %{_cuda_version_major}.%{_cuda_version_minor}
%global _cuda_version_full_num %{_cuda_version_major}.%{_cuda_version_minor}.%{_cuda_version_micro}
BuildRequires: cuda-toolkit-12-config-common = %{_cuda_version_full_num}
BuildRequires: cuda-toolkit-config-common = %{_cuda_version_full_num}
BuildRequires: cuda-cudart-devel-%{_cuda_version_pkg_name} = %{_cuda_version_full_num}
BuildRequires: cuda-compiler-%{_cuda_version_pkg_name}
BuildRequires: cuda-command-line-tools-%{_cuda_version_pkg_name}
BuildRequires: cuda-libraries-devel-%{_cuda_version_pkg_name}
%endif

%global _vespa_3rdparty_deps_packaging_notice \
See https://github.com/vespa-engine/vespa-3rdparty-deps for details \
about packaging.

%description
%{_vespa_3rdparty_deps_packaging_notice}

%prep
%setup -q -n java-llama.cpp-%{version}

%build
%if 0%{?_devtoolset_enable:1}
source %{_devtoolset_enable} || true
%endif

# PATH to vespa-cmake etc
PATH=%{_prefix}/bin:/usr/local/cuda-%{_cuda_version_norm_num}/bin:$PATH
mvn compile

%define _common_cmake_options \
    -DCMAKE_INSTALL_RPATH=\$ORIGIN \
    -DCMAKE_BUILD_WITH_INSTALL_RPATH=true \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DCMAKE_C_FLAGS_RELWITHDEBINFO="-g -O3 -DNDEBUG" \
    -DCMAKE_CXX_FLAGS_RELWITHDEBINFO="-g -O3 -DNDEBUG" \
    -DGGML_METAL=OFF \
    -DGGML_OPENMP=ON \
    -DGGML_NATIVE=OFF \
    -DLLAMA_NATIVE=OFF

cmake -S . -B build %{shrink:%{_common_cmake_options}} \
    -DGGML_CUDA=OFF

VERBOSE=1 cmake --build build --config RelWithDebInfo -j 4

%if 0%{?_enable_cuda}

cmake -S . -B build-cuda %{shrink:%{_common_cmake_options}} \
    -DGGML_CUDA=ON \
    -DCMAKE_CUDA_ARCHITECTURES="75;80;89"

VERBOSE=1 cmake --build build-cuda -j 4
%endif

%install

mkdir -p %{buildroot}%{_libdir}
cp -p src/main/resources/de/kherud/llama/Linux/*/lib*.so %{buildroot}%{_libdir}

%if 0%{?_enable_cuda}
mkdir -p %{buildroot}%{_libdir}/cuda
cp -p src/main/resources_linux_cuda/de/kherud/llama/Linux/*/lib*.so %{buildroot}%{_libdir}/cuda
%endif

%files
%license LICENSE.md
%{_libdir}
%if 0%{?_enable_cuda}
%exclude %{_libdir}/*cuda*
%endif

%if 0%{?_enable_cuda}
%package cuda

Requires:       cuda-cudart-%{_cuda_version_pkg_name} = %{_cuda_version_full_num}
Requires:       libcublas-%{_cuda_version_pkg_name}

Summary:        Native part of Java Bindings for llama.cpp (using CUDA)
Requires:       %{name} = %{version}-%{release}

%description cuda
CUDA support package for Vespa.
%{_vespa_3rdparty_deps_packaging_notice}

%files cuda
%license LICENSE.md
%{_libdir}/cuda
%endif

%changelog
* Thu Jul  3 2025 Arne Juul - 4.1.0.6
- build both CUDA and non-CUDA from same source
